{"version":3,"sources":["app/authSlice.js","app/messageSlice.js","app/showSlice.js","app/store.js","app/supabaseClient.js","components/login/LoginForm.js","components/login/LoginDetails.js","pages/Login.js","components/search/ShowPic.js","components/dashboard/Pages.js","hooks/useWindowDimensions.js","components/dashboard/ShowList.js","components/dashboard/StatsBox.js","components/dashboard/Activity.js","hooks/useGraphql.js","hooks/useFetch.js","pages/Dashboard.js","components/search/Recommendations.js","components/search/ShowCard.js","components/search/ShowDisplay.js","pages/Search.js","components/detail/RelatedMedia.js","components/detail/UserFacts.js","components/detail/ShowDetails.js","hooks/useMarkdown.js","components/detail/Review.js","components/detail/Reviews.js","pages/Detail.js","pages/Profile.js","components/signup/SignUpForm.js","pages/SignUp.js","components/navbar/NavToggle.js","components/navbar/Navbar.js","components/ui/Message.js","App.js","index.js"],"names":["authSlice","createSlice","name","initialState","user_id","access_token","expires_at","email","reducers","login","state","action","payload","logout","actions","messageSlice","message","status","link","showMessage","hideMessage","showSlice","showinfo","setShowInfo","store","configureStore","reducer","auth","show","supabase","createClient","LoginForm","props","emailRef","useRef","passwordRef","useState","emailValid","setEmailValid","passwordValid","setPasswordValid","dispatch","useDispatch","navigate","useNavigate","onSubmit","e","preventDefault","current","value","password","length","pwValid","signInWithEmail","signIn","user","session","error","console","log","setTimeout","replace","className","htmlFor","ref","type","id","to","LoginDetails","icon","faVideo","size","faComment","faSmile","faMusic","Login","ShowPic","src","coverImage","large","faBook","title","english","romaji","Pages","page","setPage","perPage","numItems","itemIndex","totalPages","Math","ceil","pageHandler","target","innerText","oldPage","clicked","useEffect","onPageChange","onClick","getWindowDimensions","window","width","innerWidth","height","innerHeight","ShowList","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","displayedStart","setDisplayedStart","displayedEnd","setDisplayedEnd","search","setSearch","shows","filtered","setFiltered","onChange","filter","max","chapters","episodes","progress","placeholder","searchterm","toLowerCase","includes","slice","map","start","end","StatsBox","showStat","setShowStat","useSelector","animeprogress","anime","reduce","prev","min","mangaprogress","manga","timewatched","duration","displayed","text","floor","faClock","faHeart","Activity","useGraphql","query_params","page_params","my_params","my_page_params","key","Array","isArray","item","useFetch","dataFn","loading","setLoading","setError","url","options","old","fetch","then","response","json","data","catch","err","Dashboard","myshows","setMyshows","progresslist","allanime","setAllAnime","allmanga","setAllManga","isLoggedIn","user_email","queryConstructor","allshows","Page","media","oldshows","getShows","getShowInfo","arr_of_shows","query","id_in","method","headers","Accept","body","JSON","stringify","from","select","eq","connection","anilist_id","forEach","userinfo","getUserShows","Recommendations","selectedRef","selected","showHandler","months","ShowCard","averageScore","endDate","month","year","ReactHtmlParser","description","substring","ShowDisplay","showSeq","setShowSeq","format","setFormat","setType","relations","edges","relation","myclass","displayForm","switchHandler","checked","faList","faGrip","faTableCellsLarge","morePages","seeMore","configObj","new_viewer","popularity_greater","status_in","averageScore_greater","sort","underrated","popularity_lesser","endDate_lesser","heartwarming","genre_in","genre_not_in","format_not_in","existential","exciting","endDate_greater","good_recent","cry","tag_in","tag_not_in","school_rom","Search","setShows","picked","setPicked","constructQuery","pageInfo","currentPage","hasNextPage","sendQuery","oldShows","concat","getNewShows","RelatedMedia","related","nodes","rShow","extraLarge","alt","UserFacts","badge","num","faCheck","faEye","showPic","ShowDetails","genres","join","faCalendar","startDate","faStar","useMarkdown","Review","opened","setOpened","reviewtext","review","summary","faMinus","faPlus","children","rehypePlugins","rehypeRaw","Reviews","reviews","Detail","showInfo","params","useParams","Media","mediaId","node","Profile","SignUpForm","signUp","SignUp","NavToggle","closeNavbar","setClosed","isActive","undefined","faHome","faSearch","faChartArea","faUser","Navbar","active","setActive","href","style","Message","faXmark","App","showmsg","path","element","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.cfd9d22a.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  user_id: \"\",\n  access_token: \"\",\n  expires_at: 0,\n  email: \"\"\n};\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.access_token = action.payload.access_token;\n      state.user_id = action.payload.user_id;\n      state.email = action.payload.email;\n    },\n    logout: (state) => {\n      state.access_token = \"\";\n      state.user_id = \"\";\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const { login, logout } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  message: \"\",\n  status: \"\",\n  link: \"\"\n};\n\nexport const messageSlice = createSlice({\n  name: \"message\",\n  initialState,\n  reducers: {\n    showMessage: (state, action) => {\n      state.message = action.payload.message;\n      state.status = action.payload.status;\n      state.link = action.payload.link;\n    },\n    hideMessage: (state, action) => {\n      state.message = \"\";\n      state.status = \"\";\n      state.link = \"\";\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const { showMessage, hideMessage } = messageSlice.actions;\n\nexport default messageSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  showinfo: {}\n};\n\nexport const showSlice = createSlice({\n  name: \"show\",\n  initialState,\n  reducers: {\n    setShowInfo: (state, action) => {\n      state.showinfo = action.payload.showinfo;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const { setShowInfo } = showSlice.actions;\n\nexport default showSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authSlice from \"./authSlice\";\r\nimport messageSlice from \"./messageSlice\";\r\nimport showSlice from \"./showSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authSlice,\r\n    message: messageSlice,\r\n    show: showSlice\r\n  }\r\n});\r\n","import { createClient } from \"@supabase/supabase-js\";\n\nexport const supabase = createClient(\n  \"https://bvdfbzafkqrigsrqsvul.supabase.co\",\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ2ZGZiemFma3FyaWdzcnFzdnVsIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTc4NjU0NDQsImV4cCI6MTk3MzQ0MTQ0NH0.r8wEKoUqgiDbwMGqcrvF53gsFan0pWoaD8LCfKztDVQ\"\n);\n","import \"./LoginForm.css\";\r\nimport { useRef, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../app/authSlice\";\r\nimport { supabase } from \"../../app/supabaseClient\";\r\nimport { showMessage, hideMessage } from \"../../app/messageSlice\";\r\n\r\nconst LoginForm = (props) => {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [emailValid, setEmailValid] = useState(true);\r\n  const [passwordValid, setPasswordValid] = useState(true);\r\n  const dispatch = useDispatch();\r\n  let navigate = useNavigate();\r\n\r\n  const loginHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    //validate on client side email and pw\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n    const emailValid = email.length > 0;\r\n    const pwValid = password.length > 0;\r\n    if (!emailValid) {\r\n      setEmailValid(false);\r\n    } else {\r\n      setEmailValid(true);\r\n    }\r\n    if (!pwValid) {\r\n      setPasswordValid(false);\r\n    } else {\r\n      setPasswordValid(true);\r\n    }\r\n\r\n    //complete validation\r\n    if (emailValid && pwValid) {\r\n      //send request to server\r\n      async function signInWithEmail() {\r\n        const { user, session, error } = await supabase.auth.signIn({\r\n          email: email,\r\n          password: password\r\n        });\r\n        if (!error) {\r\n          //login successful, store user data in store\r\n          dispatch(\r\n            login({\r\n              user_id: user.user_id,\r\n              access_token: session.access_token,\r\n              email: user.email\r\n            })\r\n          );\r\n          //navigate back to dashboard\r\n          dispatch(\r\n            showMessage({\r\n              message: `Welcome ${email}`,\r\n              status: \"success\"\r\n            })\r\n          );\r\n          setTimeout(() => {\r\n            dispatch(hideMessage());\r\n          }, 3000);\r\n          navigate(\"/dashboard\", { replace: true });\r\n        } else {\r\n          console.log(error);\r\n          dispatch(\r\n            showMessage({\r\n              message:\r\n                \"Invalid username or password. No Account? Click Here to Sign Up\",\r\n              status: \"error\",\r\n              link: \"/sign-up\"\r\n            })\r\n          );\r\n          setTimeout(() => {\r\n            dispatch(hideMessage());\r\n          }, 3000);\r\n        }\r\n      }\r\n      signInWithEmail();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={loginHandler} className=\"login-form\">\r\n      <h1>Login</h1>\r\n      <div className={emailValid ? \"form-control\" : \"form-control invalid\"}>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input ref={emailRef} type=\"email\" id=\"email\" name=\"email\" />\r\n      </div>\r\n      <div className={passwordValid ? \"form-control\" : \"form-control invalid\"}>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          ref={passwordRef}\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n        />\r\n      </div>\r\n      <div className=\"login-links\">\r\n        <Link to=\"/sign-up\">Sign Up</Link>\r\n        <Link to=\"#\">Forgot Password</Link>\r\n      </div>\r\n      <button type=\"submit\" className=\"login-submit\">\r\n        Sign In\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default LoginForm;\r\n","import \"./LoginDetails.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faVideo,\r\n  faMusic,\r\n  faSmile,\r\n  faComment\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst LoginDetails = (props) => {\r\n  return (\r\n    <div className=\"login-details\">\r\n      <ul>\r\n        <li>\r\n          <FontAwesomeIcon icon={faVideo} size=\"2x\" className=\"list-icon\" />\r\n          <p>Track Your Favorite Shows</p>\r\n        </li>\r\n        <li>\r\n          <FontAwesomeIcon icon={faComment} size=\"2x\" className=\"list-icon\" />\r\n          <p>Find and track discussions across the web</p>\r\n        </li>\r\n        <li>\r\n          <FontAwesomeIcon icon={faSmile} size=\"2x\" className=\"list-icon\" />\r\n          <p>Get instant recommendations</p>\r\n        </li>\r\n        <li>\r\n          <FontAwesomeIcon icon={faMusic} size=\"2x\" className=\"list-icon\" />\r\n          <p>Browse and track your favourite songs</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginDetails;\r\n","import LoginForm from \"../components/login/LoginForm\";\r\nimport \"./Pages.css\";\r\nimport LoginDetails from \"../components/login/LoginDetails\";\r\nconst Login = (props) => {\r\n  return (\r\n    <div className=\"login-page\">\r\n      <LoginDetails />\r\n      <LoginForm />\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import \"./ShowPic.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBook, faVideo } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nconst ShowPic = (props) => {\n  const show = props.show;\n\n  return (\n    <div className=\"show-pic\">\n      <img src={show.coverImage.large} />\n      <div className=\"show-icon\">\n        <FontAwesomeIcon\n          icon={show.type === \"ANIME\" ? faVideo : faBook}\n          size=\"xl\"\n          className=\"list-icon\"\n        />\n      </div>\n      <Link to={`/detail/${show.id}`}></Link>\n      <div className=\"title\">\n        <p>{show.title.english ?? show.title.romaji}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ShowPic;\n","import \"./Pages.css\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Pages = (props) => {\r\n  const [page, setPage] = useState(1);\r\n  const perPage = props.perPage;\r\n  const numItems = props.numItems;\r\n  const itemIndex = [(page - 1) * perPage, page * perPage - 1];\r\n  const totalPages = Math.ceil(numItems / perPage);\r\n\r\n  const pageHandler = (e) => {\r\n    if (e.target.innerText === \"First\") {\r\n      setPage((oldPage) => 1);\r\n    } else if (e.target.innerText === \"Last\") {\r\n      setPage((oldPage) => totalPages);\r\n    } else {\r\n      let clicked = +e.target.innerText;\r\n      setPage((oldPage) => clicked);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.numItems > 0) {\r\n      props.onPageChange(itemIndex[0], itemIndex[1] + 1);\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [props.numItems]);\r\n\r\n  const selected = \"page page-selected\";\r\n\r\n  const multiplepg = (\r\n    <div className=\"pagination\">\r\n      <button className=\"page\" onClick={pageHandler}>\r\n        First\r\n      </button>\r\n      {page === totalPages && totalPages > 2 ? (\r\n        <button className=\"page\" onClick={pageHandler}>\r\n          {page - 2}\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {page > 1 ? (\r\n        <button className=\"page\" onClick={pageHandler}>\r\n          {page - 1}\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <button className={selected} onClick={pageHandler}>\r\n        {page}\r\n      </button>\r\n      {page < totalPages ? (\r\n        <button className=\"page\" onClick={pageHandler}>\r\n          {page + 1}\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {page === 1 && totalPages >= 3 ? (\r\n        <button className=\"page\" onClick={pageHandler}>\r\n          {page + 2}\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <button className=\"page\" onClick={pageHandler}>\r\n        Last\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return totalPages > 1 ? multiplepg : \"\";\r\n};\r\n\r\nexport default Pages;\r\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import ShowPic from \"../search/ShowPic\";\r\nimport Pages from \"./Pages\";\r\nimport \"./ShowList.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\r\n\r\nconst ShowList = (props) => {\r\n  const { height, width } = useWindowDimensions();\r\n  let perPage = 3;\r\n  if (width < 800) {\r\n    perPage = 3;\r\n  } else {\r\n    perPage = 5;\r\n  }\r\n  const [displayedStart, setDisplayedStart] = useState(0);\r\n  const [displayedEnd, setDisplayedEnd] = useState(perPage);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [filtered, setFiltered] = useState(props.shows);\r\n\r\n  const pageHandler = (start, end) => {\r\n    setDisplayedStart(start);\r\n    setDisplayedEnd(end);\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    let searchterm = e.target.value.toLowerCase();\r\n    setSearch(searchterm);\r\n    setFiltered(\r\n      props.shows.filter((show) => {\r\n        return (\r\n          show.title?.english?.toLowerCase()?.includes(searchterm) ||\r\n          show.title?.romaji?.toLowerCase()?.includes(searchterm)\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const filterHandler = (e) => {\r\n    if (e.target.value === \"all\") {\r\n      setFiltered(props.shows);\r\n    } else if (e.target.value === \"watching\") {\r\n      setFiltered(\r\n        props.shows.filter((show) => {\r\n          return Math.max(show.chapters, show.episodes) > show.progress;\r\n        })\r\n      );\r\n    } else if (e.target.value === \"completed\") {\r\n      setFiltered(\r\n        props.shows.filter((show) => {\r\n          return show.progress > Math.max(show.chapters, show.episodes);\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFiltered(props.shows);\r\n  }, [props.shows]);\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"sl-nav\">\r\n        <div className=\"sl-top\">\r\n          <h1>My Shows</h1>\r\n          <select name=\"\" id=\"\" className=\"sl-select\" onChange={filterHandler}>\r\n            <option value=\"all\">All Shows</option>\r\n            <option value=\"watching\">Watching</option>\r\n            <option value=\"completed\">Completed</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"sl-next\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"sl-search\"\r\n            placeholder=\"Search Shows\"\r\n            value={search}\r\n            onChange={changeHandler}\r\n          />\r\n          <h4>{filtered.length} shows</h4>\r\n        </div>\r\n      </div>\r\n      <div className=\"sl-shows\">\r\n        {filtered.slice(displayedStart, displayedEnd).map((show) => (\r\n          <ShowPic show={show} key={show.id} />\r\n        ))}\r\n      </div>\r\n      <Pages\r\n        perPage={perPage}\r\n        numItems={filtered.length}\r\n        onPageChange={pageHandler}\r\n      />\r\n    </section>\r\n  );\r\n};\r\nexport default ShowList;\r\n","import \"./StatsBox.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faVideo,\r\n  faBook,\r\n  faClock,\r\n  faHeart\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n\r\nconst StatsBox = (props) => {\r\n  const [showStat, setShowStat] = useState(\"anime\");\r\n  const showinfo = useSelector((state) => state.show.showinfo);\r\n  let animeprogress = props.anime?.reduce((prev, anime) => {\r\n    return prev + Math.min(showinfo[\"key\" + anime.id].progress, anime.episodes);\r\n  }, 0);\r\n  let mangaprogress = props.manga?.reduce((prev, manga) => {\r\n    return prev + showinfo[\"key\" + manga.id].progress;\r\n  }, 0);\r\n  let timewatched = props.anime?.reduce((prev, anime) => {\r\n    return prev + showinfo[\"key\" + anime.id].progress * anime.duration;\r\n  }, 0);\r\n  let displayed = animeprogress;\r\n  let text = \"episodes watched\";\r\n\r\n  if (showStat === \"manga\") {\r\n    displayed = mangaprogress;\r\n    text = \"chapters read\";\r\n  } else if (showStat === \"time\") {\r\n    displayed = Math.floor(+timewatched / 60);\r\n    text = \"hours watched\";\r\n  } else if (showStat === \"favorited\") {\r\n    displayed = 0;\r\n    text = \"favorited shows\";\r\n  }\r\n\r\n  const animeHandler = () => {\r\n    setShowStat(\"anime\");\r\n  };\r\n  const mangaHandler = () => {\r\n    setShowStat(\"manga\");\r\n  };\r\n  const timeHandler = () => {\r\n    setShowStat(\"time\");\r\n  };\r\n  const favoritedHandler = () => {\r\n    setShowStat(\"favorited\");\r\n  };\r\n\r\n  return (\r\n    <section className=\"stats-box\">\r\n      <div className=\"stats-tr\">\r\n        <button\r\n          onClick={animeHandler}\r\n          className={showStat === \"anime\" ? \"active\" : \"\"}\r\n        >\r\n          <FontAwesomeIcon icon={faVideo} className=\"list-icon\" />\r\n        </button>\r\n        <button\r\n          onClick={mangaHandler}\r\n          className={showStat === \"manga\" ? \"active\" : \"\"}\r\n        >\r\n          <FontAwesomeIcon icon={faBook} className=\"list-icon\" />\r\n        </button>\r\n        <button\r\n          onClick={timeHandler}\r\n          className={showStat === \"time\" ? \"active\" : \"\"}\r\n        >\r\n          <FontAwesomeIcon icon={faClock} className=\"list-icon\" />\r\n        </button>\r\n        <button\r\n          onClick={favoritedHandler}\r\n          className={showStat === \"favorited\" ? \"active\" : \"\"}\r\n        >\r\n          <FontAwesomeIcon icon={faHeart} className=\"list-icon\" />\r\n        </button>\r\n      </div>\r\n      <h1>{displayed ?? 0}</h1>\r\n      <p>{text}</p>\r\n    </section>\r\n  );\r\n};\r\nexport default StatsBox;\r\n","import \"./Activity.css\";\r\n\r\nconst Activity = (props) => {\r\n  return (\r\n    <section className=\"activity-list\">\r\n      <h1>Activity</h1>\r\n      <ul>\r\n        <li>\r\n          <p>Completed \"Now And Then, Here and There\"</p>\r\n          <small>Date: 14 Jul 2022</small>\r\n        </li>\r\n        <li>\r\n          <p>Watched episode 12 of \"Non Non Biyori\"</p>\r\n          <small>Date: 11 Jul 2021</small>\r\n        </li>\r\n        <li>\r\n          <p>Watched episode 12 of \"Non Non Biyori\"</p>\r\n          <small>Date: 11 Jul 2021</small>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\nexport default Activity;\r\n","function useGraphql() {\n  return function createQuery(query_params, page_params) {\n    let my_params = \"\";\n    let my_page_params = \"perPage:50,\";\n\n    for (const key in page_params) {\n      my_page_params += `${key}:${page_params[key]},`;\n    }\n\n    for (const key in query_params) {\n      if (Array.isArray(query_params[key])) {\n        my_params += `${key}:[${query_params[key].map(\n          (item) => `\\\"${item}\\\"`\n        )}],`;\n      } else {\n        my_params += `${key}:${query_params[key]},`;\n      }\n    }\n\n    let query = `query {\n    Page(${my_page_params}) {\n\n      pageInfo {\n    \t  total\n    \t  perPage\n    \t  currentPage\n    \t  lastPage\n    \t  hasNextPage\n    \t}\n\n      media(${my_params}) {\n        id\n        title {\n          english\n          romaji\n        }\n        type\n        duration\n        averageScore\n        episodes\n        chapters\n        coverImage {\n          large\n          medium\n        }\n        description\n        endDate {\n          year\n          month\n          day\n        }\n        status\n        popularity\n        relations {\n          edges {\n            relationType\n          }\n        }\n      }\n    }\n  }`;\n    return query;\n  };\n}\n\nexport default useGraphql;\n","import { useState } from \"react\";\n\nconst useFetch = (dataFn) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const getResponse = (url, options) => {\n    setLoading((old) => true);\n    fetch(url, options)\n      .then((response) => response.json())\n      .then((data) => {\n        dataFn(data.data);\n      })\n      .catch((err) => {\n        setError(err.message);\n        console.log(err, \"err\");\n      });\n    setLoading(false);\n  };\n\n  return [error, loading, getResponse];\n};\n\nexport default useFetch;\n","import { Fragment, useEffect } from \"react\";\r\nimport ShowList from \"../components/dashboard/ShowList\";\r\nimport StatsBox from \"../components/dashboard/StatsBox\";\r\nimport Activity from \"../components/dashboard/Activity\";\r\nimport \"./Pages.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { supabase } from \"../app/supabaseClient\";\r\nimport useGraphql from \"../hooks/useGraphql\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { useState } from \"react\";\r\nimport { setShowInfo } from \"../app/showSlice\";\r\n\r\nconst Dashboard = (props) => {\r\n  const [myshows, setMyshows] = useState([]);\r\n  let progresslist = {};\r\n  const dispatch = useDispatch();\r\n  let [allanime, setAllAnime] = useState();\r\n  let [allmanga, setAllManga] = useState();\r\n\r\n  const displayShows = (shows) => {\r\n    const allshows = shows.Page.media;\r\n    allshows.map((show) => {\r\n      show.progress = progresslist[\"key\" + show.id].progress;\r\n    });\r\n    setAllAnime(\r\n      allshows.filter((show) => {\r\n        return show.type === \"ANIME\";\r\n      })\r\n    );\r\n    setAllManga(\r\n      allshows.filter((show) => {\r\n        return show.type === \"MANGA\";\r\n      })\r\n    );\r\n\r\n    setMyshows((oldshows) => allshows);\r\n  };\r\n\r\n  const isLoggedIn = useSelector((state) => state.auth.access_token);\r\n  const user_email = useSelector((state) => state.auth.email);\r\n  const queryConstructor = useGraphql();\r\n  const [error, loading, getShows] = useFetch(displayShows);\r\n\r\n  useEffect(() => {\r\n    function getShowInfo(arr_of_shows) {\r\n      const query = queryConstructor({ id_in: `[${arr_of_shows}]` });\r\n      getShows(\"https://graphql.anilist.co\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          query: query\r\n        })\r\n      });\r\n    }\r\n\r\n    async function getUserShows() {\r\n      const { data, error } = await supabase\r\n        .from(\"User Media Connection\")\r\n        .select()\r\n        .eq(\"user\", user_email);\r\n      if (data && !error) {\r\n        let arr_shows = data.map((connection) => connection.anilist_id);\r\n        getShowInfo(arr_shows);\r\n        data.forEach((userinfo) => {\r\n          progresslist[\"key\" + userinfo.anilist_id] = {\r\n            anilist_id: userinfo.anilist_id,\r\n            progress: userinfo.progress\r\n          };\r\n        });\r\n        dispatch(\r\n          setShowInfo({\r\n            showinfo: progresslist\r\n          })\r\n        );\r\n      }\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n      getUserShows();\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <ShowList shows={myshows} />\r\n      <div className=\"info\">\r\n        <StatsBox anime={allanime} manga={allmanga} />\r\n        <Activity />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","import \"./Recommendations.css\";\r\nimport useGraphql from \"../../hooks/useGraphql.js\";\r\nimport useFetch from \"../../hooks/useFetch.js\";\r\nimport { useRef } from \"react\";\r\nimport { faComments } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Recommendations = (props) => {\r\n  const selectedRef = useRef();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //build request\r\n    const selected = selectedRef.current.value;\r\n    props.showHandler(selected);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <h1>Find Shows</h1>\r\n      <div className=\"form-inputs\">\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"main\">One Click Recommendations</label>\r\n          <select name=\"main\" id=\"main\" ref={selectedRef}>\r\n            <option value=\"new_viewer\">I'm New To Anime & Manga</option>\r\n            <option value=\"underrated\">Looking for something underrated</option>\r\n            <option value=\"heartwarming\">\r\n              I want something to take my mind off the stresses of daily life\r\n            </option>\r\n            <option value=\"existential\">\r\n              I’m bored and want something that truly breaks the mold and make\r\n              me ponder my existence\r\n            </option>\r\n            <option value=\"exciting\">\r\n              I want something exciting that keeps me at the edge of my seat\r\n            </option>\r\n            <option value=\"good_recent\">\r\n              I want to watch a good and recent show\r\n            </option>\r\n            <option value=\"cry\">\r\n              I want something sad that allows me to have a good cry\r\n            </option>\r\n            <option value=\"school_rom\">\r\n              I want a school romance to relax and laugh about\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <button className=\"submit-btn\">Get Recommendations</button>\r\n    </form>\r\n  );\r\n};\r\nexport default Recommendations;\r\n","import \"./ShowCard.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBook, faVideo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactHtmlParser, {\r\n  processNodes,\r\n  convertNodeToElement,\r\n  htmlparser2\r\n} from \"react-html-parser\";\r\n\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"Aug\",\r\n  \"Sept\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\"\r\n];\r\nconst ShowCard = (props) => {\r\n  const show = props.show;\r\n\r\n  return (\r\n    <div className=\"show-card\">\r\n      <img src={show.coverImage.large} />\r\n      <div className=\"show-details\">\r\n        <h4>{show.title.english ?? show.title.romaji}</h4>\r\n        <div className=\"mid-row\">\r\n          <FontAwesomeIcon\r\n            icon={show.type === \"ANIME\" ? faVideo : faBook}\r\n            size=\"1x\"\r\n            className=\"list-icon\"\r\n          />\r\n          <span className=\"badge\">Score: {show.averageScore}</span>\r\n          <span className=\"badge\">\r\n            Ended: {months[show.endDate.month - 1]} {show.endDate.year}\r\n          </span>\r\n        </div>\r\n        <p>{ReactHtmlParser(show?.description?.substring(0, 200)) + \"...\"}</p>\r\n      </div>\r\n      <Link to={`/detail/${show.id}`}></Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowCard;\r\n","import { Fragment, useState } from \"react\";\nimport \"./ShowDisplay.css\";\nimport ShowPic from \"./ShowPic\";\nimport ShowCard from \"./ShowCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faList,\n  faGrip,\n  faTableCellsLarge\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst ShowDisplay = (props) => {\n  let shows = props.shows;\n  const [showSeq, setShowSeq] = useState(false);\n  const [format, setFormat] = useState(\"grid\");\n  const [type, setType] = useState(\"All\");\n\n  if (!showSeq) {\n    shows = shows.filter((show) => {\n      return !show.relations.edges\n        .map((relation) => relation[\"relationType\"])\n        .includes(\"PREQUEL\");\n    });\n  }\n\n  if (type === \"Manga\") {\n    shows = shows.filter((show) => {\n      return show.type === \"MANGA\";\n    });\n  } else if (type === \"Anime\") {\n    shows = shows.filter((show) => {\n      return show.type === \"ANIME\";\n    });\n  }\n\n  const changeHandler = (e) => {\n    setShowSeq(e.target.checked);\n  };\n\n  const loadShows = (e) => {\n    props.seeMore();\n  };\n\n  const setCard = () => {\n    setFormat(\"card\");\n  };\n\n  const setGrid = () => {\n    setFormat(\"grid\");\n  };\n\n  const setList = () => {\n    setFormat(\"list\");\n  };\n\n  const switchHandler = (e) => {\n    setType(e.target.innerText);\n  };\n\n  let myclass;\n  let displayForm;\n\n  if (format === \"grid\") {\n    myclass = \"show-display\";\n    displayForm = shows.map((show) => <ShowPic key={show.id} show={show} />);\n  } else if (format === \"card\") {\n    myclass = \"show-display-card\";\n    displayForm = shows.map((show) => <ShowCard key={show.id} show={show} />);\n  } else if (format === \"list\") {\n  }\n\n  console.log(props.loading);\n\n  return (\n    <div className=\"show-area\">\n      <div className=\"top-row\">\n        <h1>Shows: {shows.length} results</h1>\n        <div className=\"tabs\">\n          <button\n            onClick={switchHandler}\n            className={type === \"All\" ? \"active\" : \"\"}\n          >\n            All\n          </button>\n          <button\n            onClick={switchHandler}\n            className={type === \"Manga\" ? \"active\" : \"\"}\n          >\n            Manga\n          </button>\n          <button\n            onClick={switchHandler}\n            className={type === \"Anime\" ? \"active\" : \"\"}\n          >\n            Anime\n          </button>\n        </div>\n      </div>\n\n      <div className=\"show-filter\">\n        <div className=\"form-control\">\n          <label htmlFor=\"show_sequels\">Show Sequels</label>\n          <input\n            type=\"checkbox\"\n            name=\"show_sequels\"\n            id=\"show_sequels\"\n            onChange={changeHandler}\n            value={showSeq}\n          />\n        </div>\n        <div className=\"btn-group\">\n          <button\n            className={`icon-btn ${format === \"list\" && \"active\"}`}\n            id=\"list\"\n            onClick={setList}\n          >\n            <FontAwesomeIcon icon={faList} size=\"1x\" className=\"list-icon\" />\n          </button>\n          <button\n            className={`icon-btn ${format === \"grid\" && \"active\"}`}\n            id=\"grid\"\n            onClick={setGrid}\n          >\n            <FontAwesomeIcon icon={faGrip} size=\"1x\" className=\"list-icon\" />\n          </button>\n          <button\n            className={`icon-btn ${format === \"card\" && \"active\"}`}\n            id=\"card\"\n            onClick={setCard}\n          >\n            <FontAwesomeIcon\n              icon={faTableCellsLarge}\n              size=\"1x\"\n              className=\"list-icon\"\n            />\n          </button>\n        </div>\n      </div>\n      <div className={myclass}>\n        {props.loading ? (\n          <div className=\"lds-facebook\">\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        ) : (\n          displayForm\n        )}\n      </div>\n      {props.morePages ? (\n        <div className=\"see-more\">\n          <button className=\"button\" onClick={loadShows}>\n            See More\n          </button>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\nexport default ShowDisplay;\n","import \"./Pages.css\";\r\nimport Recommendations from \"../components/search/Recommendations\";\r\nimport ShowDisplay from \"../components/search/ShowDisplay\";\r\nimport { useState } from \"react\";\r\nimport useGraphql from \"../hooks/useGraphql.js\";\r\nimport useFetch from \"../hooks/useFetch.js\";\r\n\r\nlet configObj = {\r\n  new_viewer: {\r\n    popularity_greater: 50000,\r\n    status_in: \"FINISHED\",\r\n    averageScore_greater: 6,\r\n    sort: \"POPULARITY_DESC\"\r\n  },\r\n  underrated: {\r\n    popularity_lesser: 30000,\r\n    status_in: \"FINISHED\",\r\n    averageScore_greater: 80,\r\n    endDate_lesser: 20200713,\r\n    sort: \"POPULARITY_DESC\"\r\n  },\r\n  heartwarming: {\r\n    popularity_lesser: 100000,\r\n    genre_in: [\"Comedy\", \"Slice Of Life\"],\r\n    genre_not_in: [\"Horror\", \"Action\", \"Drama\"],\r\n    status_in: \"FINISHED\",\r\n    averageScore_greater: 70,\r\n    endDate_lesser: 20210713,\r\n    sort: \"POPULARITY_DESC\",\r\n    format_not_in: \"[OVA,MUSIC]\"\r\n  },\r\n  existential: {\r\n    popularity_lesser: 200000,\r\n    genre_in: [\"Psychological\"],\r\n    genre_not_in: [\"Slice Of Life\", \"Comedy\"],\r\n    status_in: \"FINISHED\",\r\n    averageScore_greater: 75,\r\n    endDate_lesser: 20210713,\r\n    sort: \"POPULARITY_DESC\"\r\n  },\r\n  exciting: {\r\n    popularity_lesser: 200000,\r\n    genre_in: [\"Horror\", \"Action\"],\r\n    genre_not_in: [\"Slice Of Life\", \"Comedy\"],\r\n    status_in: \"FINISHED\",\r\n    averageScore_greater: 65,\r\n    endDate_greater: 20100713,\r\n    sort: \"POPULARITY_DESC\"\r\n  },\r\n  good_recent: {\r\n    popularity_greater: 10000,\r\n    averageScore_greater: 73,\r\n    endDate_greater: 20180713,\r\n    status_in: \"FINISHED\",\r\n    sort: \"END_DATE_DESC\"\r\n  },\r\n  cry: {\r\n    popularity_lesser: 150000,\r\n    genre_in: [\"Drama\"],\r\n    genre_not_in: [\"Sports\", \"Action\"],\r\n    tag_in: [\"Tragedy\"],\r\n    tag_not_in: [\"Shounen\", \"Cultivation\"],\r\n    averageScore_greater: 75,\r\n    sort: \"POPULARITY_DESC\",\r\n    format_not_in: \"[OVA,ONA,MUSIC]\"\r\n  },\r\n  school_rom: {\r\n    popularity_lesser: 100000,\r\n    genre_in: [\"Romance\"],\r\n    genre_not_in: [\"Horror\", \"Action\", \"Psychological\"],\r\n    tag_in: [\"School\"],\r\n    tag_not_in: [\"Shounen\", \"Cultivation\", \"Tragedy\"],\r\n    averageScore_greater: 65,\r\n    sort: \"POPULARITY_DESC\",\r\n    format_not_in: \"[OVA,ONA,MUSIC]\"\r\n  }\r\n};\r\n\r\nconst Search = (props) => {\r\n  const [shows, setShows] = useState([]);\r\n  const [picked, setPicked] = useState(\"\");\r\n  const [page, setPage] = useState([1, false]);\r\n\r\n  const processData = (data) => {\r\n    setShows(data.Page.media);\r\n    setPage((oldPage) => [\r\n      data.Page.pageInfo.currentPage + 1,\r\n      data.Page.pageInfo.hasNextPage\r\n    ]);\r\n  };\r\n\r\n  const newShows = (data) => {\r\n    setPage((oldPage) => [\r\n      data.Page.pageInfo.currentPage + 1,\r\n      data.Page.pageInfo.hasNextPage\r\n    ]);\r\n    setShows((oldShows) => oldShows.concat(data.Page.media));\r\n  };\r\n\r\n  const constructQuery = useGraphql();\r\n  const [error, loading, sendQuery] = useFetch(processData);\r\n  const [errorNew, loadingNew, getNewShows] = useFetch(newShows);\r\n\r\n  const showHandler = (selected) => {\r\n    setPicked(selected);\r\n    sendQuery(\"https://graphql.anilist.co\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        query: constructQuery(configObj[selected])\r\n      })\r\n    });\r\n  };\r\n\r\n  const seeMore = () => {\r\n    getNewShows(\"https://graphql.anilist.co\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        query: constructQuery(configObj[picked], { page: page[0] })\r\n      })\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <Recommendations showHandler={showHandler} />\r\n      <ShowDisplay\r\n        loading={loading}\r\n        shows={shows}\r\n        seeMore={seeMore}\r\n        morePages={page[1]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Search;\r\n","import \"./RelatedMedia.css\";\r\nimport { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst RelatedMedia = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <h2>Related Media</h2>\r\n      <div className=\"related-display\">\r\n        {props.related?.nodes?.map((rShow) => (\r\n          <div className=\"related-show\">\r\n            <img\r\n              key={rShow.id}\r\n              src={rShow.coverImage.extraLarge}\r\n              alt={rShow.title.english}\r\n            />\r\n            <Link to={`/detail/${rShow.id}`}></Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default RelatedMedia;\r\n","import \"./UserFacts.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart, faCheck, faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst UserFacts = (props) => {\r\n  const showinfo = useSelector((state) => state.show.showinfo);\r\n\r\n  let badge = (\r\n    <div className=\"badge\">\r\n      <p>No Status</p>\r\n    </div>\r\n  );\r\n\r\n  if (showinfo[\"key\" + props.id]) {\r\n    let progress = showinfo[\"key\" + props.id].progress;\r\n    if (progress > props.num && props.num !== 0) {\r\n      //status completed\r\n      badge = (\r\n        <div className=\"badge success\">\r\n          <p>\r\n            <FontAwesomeIcon icon={faCheck} size=\"1x\" className=\"list-icon\" />{\" \"}\r\n            Completed\r\n          </p>\r\n        </div>\r\n      );\r\n    } else if (props.num > progress && progress > 0) {\r\n      badge = (\r\n        <div className=\"badge watching\">\r\n          <p>\r\n            <FontAwesomeIcon icon={faEye} size=\"1x\" className=\"list-icon\" />{\" \"}\r\n            Watching {progress}/{props.num}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else if (progress === 0) {\r\n      badge = (\r\n        <div className=\"badge primary\">\r\n          <p>Plan To Watch</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      badge = (\r\n        <div className=\"badge\">\r\n          <p>Progress: {progress}</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-facts\">\r\n      <h1 className=\"desktop-hidden\">{props.title}</h1>\r\n      <img src={props.showPic?.extraLarge} alt={props.title} />\r\n      {badge}\r\n      <button className=\"favorites\">\r\n        <FontAwesomeIcon icon={faHeart} size=\"1x\" className=\"list-icon\" />\r\n        Add To Favorites\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default UserFacts;\r\n","import \"./ShowDetails.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCalendar,\r\n  faBook,\r\n  faClock,\r\n  faVideo,\r\n  faStar\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ReactHtmlParser, {\r\n  processNodes,\r\n  convertNodeToElement,\r\n  htmlparser2\r\n} from \"react-html-parser\";\r\n\r\nconst ShowDetails = (props) => {\r\n  let show = props.show;\r\n\r\n  return (\r\n    <div className=\"key-facts\">\r\n      <h1 className=\"desktop-show\">{show.title}</h1>\r\n      <p className=\"genres\">Genres: {show.genres?.join(\", \")}</p>\r\n      <div className=\"facts-badge\">\r\n        <span className=\"badge\">\r\n          <FontAwesomeIcon icon={faCalendar} size=\"1x\" className=\"list-icon\" />{\" \"}\r\n          {show.startDate} - {show.endDate}\r\n        </span>\r\n        {show.chapters ? (\r\n          <span className=\"badge\">\r\n            <FontAwesomeIcon icon={faBook} size=\"1x\" className=\"list-icon\" />{\" \"}\r\n            {show.chapters} chapters\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {show.episodes ? (\r\n          <span className=\"badge\">\r\n            <FontAwesomeIcon icon={faVideo} size=\"1x\" className=\"list-icon\" />{\" \"}\r\n            {show.episodes} episodes\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {show.duration ? (\r\n          <span className=\"badge\">\r\n            <FontAwesomeIcon icon={faClock} size=\"1x\" className=\"list-icon\" />{\" \"}\r\n            {show.duration} min/ep\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {show.averageScore ? (\r\n          <span className=\"badge\">\r\n            <FontAwesomeIcon icon={faStar} size=\"1x\" className=\"list-icon\" />{\" \"}\r\n            {show.averageScore}\r\n          </span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <p>{ReactHtmlParser(show.description)}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default ShowDetails;\r\n","const useMarkdown = (text) => {\r\n  const imgReg = /img\\d*\\((.+)\\)/gi;\r\n  const strikeReg = /~~(.+?)~~/gi;\r\n  const boldReg = /__(.+?)__/gi;\r\n  const boldReg2 = /\\*\\*(.+?)\\*\\*/gi;\r\n  const italicReg = /_(.+?)_/gi;\r\n  const linkReg = /\\[(.*?)\\]\\((.+?)\\)/gi;\r\n  const imgReg2 = /\\[image\\]\\((.+?)\\)/gi;\r\n  const centerReg = /~~~(.+?)~~~/gi;\r\n  const headerReg = /#(.+)/gi;\r\n  const bqReg = />\"(.+?)\"/gi;\r\n  text = text\r\n    .replace(centerReg, \"<center>$1</center>\")\r\n    .replace(imgReg, '<img src=\"$1\" alt=\"\" />')\r\n    .replace(imgReg2, '<img src=\"$1\" alt=\"\" />')\r\n    .replace(strikeReg, \"<strike>$1</strike>\")\r\n    .replace(boldReg, \"<strong>$1</strong>\")\r\n    .replace(boldReg2, \"<strong>$1</strong>\")\r\n    .replace(italicReg, \"<em>$1</em>\")\r\n    .replace(linkReg, \"<a href=$2 >$1</a>\")\r\n    .replace(headerReg, \"<h2>$1</h2>\")\r\n    .replace(bqReg, \"<blockquote>$1</blockquote>\");\r\n\r\n  return text;\r\n};\r\n\r\nexport default useMarkdown;\r\n","import \"./Reviews.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport ReactHtmlParser, {\r\n  processNodes,\r\n  convertNodeToElement,\r\n  htmlparser2\r\n} from \"react-html-parser\";\r\nimport useMarkdown from \"../../hooks/useMarkdown\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport rehypeRaw from \"rehype-raw\";\r\n\r\nconst Review = (props) => {\r\n  const [opened, setOpened] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const toggleHandler = () => {\r\n    setOpened((opened) => !opened);\r\n  };\r\n\r\n  const reviewtext = useMarkdown(props.review.body);\r\n\r\n  return (\r\n    <div className=\"review\">\r\n      <div className=\"review-top\" onClick={toggleHandler}>\r\n        <h5>{props.review.summary}</h5>\r\n        {opened ? (\r\n          <FontAwesomeIcon icon={faMinus} size=\"2x\" className=\"list-icon\" />\r\n        ) : (\r\n          <FontAwesomeIcon icon={faPlus} size=\"2x\" className=\"list-icon\" />\r\n        )}\r\n      </div>\r\n      {opened ? (\r\n        <div className=\"review-body\">\r\n          <ReactMarkdown children={reviewtext} rehypePlugins={[rehypeRaw]} />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Review;\r\n","import \"./Reviews.css\";\nimport { Fragment, useEffect } from \"react\";\nimport Review from \"./Review\";\n\nconst Reviews = (props) => {\n  return (\n    <Fragment>\n      <h2>Reviews</h2>\n      <div className=\"review-container\">\n        {props.reviews?.map((review) => {\n          return <Review key={review.id} review={review} />;\n        })}\n      </div>\n    </Fragment>\n  );\n};\nexport default Reviews;\n","import { useParams } from \"react-router\";\r\nimport \"./Pages.css\";\r\nimport { Fragment } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport RelatedMedia from \"../components/detail/RelatedMedia\";\r\nimport UserFacts from \"../components/detail/UserFacts\";\r\nimport ShowDetails from \"../components/detail/ShowDetails\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport Reviews from \"../components/detail/Reviews\";\r\nconst months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\"\r\n];\r\nconst Detail = (props) => {\r\n  const [showInfo, setShowInfo] = useState({});\r\n\r\n  const processInfo = (data) => {\r\n    const show = data.Media;\r\n    show.title = show.title.english ?? show.title.romaji;\r\n    show.startDate = `${months[show.startDate.month - 1]} ${\r\n      show.startDate.year\r\n    }`;\r\n    show.endDate = `${months[show.endDate?.month - 1]} ${show.endDate.year}`;\r\n    setShowInfo(show);\r\n  };\r\n\r\n  const params = useParams();\r\n  const [error, loading, getShowInfo] = useFetch(processInfo);\r\n\r\n  useEffect(() => {\r\n    const url = \"https://graphql.anilist.co/\";\r\n    const query = `{\r\n      \r\n      Media(id: ${params.mediaId}) {\r\n        reviews {\r\n          edges {\r\n            node {\r\n              id\r\n              summary\r\n              rating\r\n              createdAt\r\n              body\r\n            }\r\n          }\r\n        }\r\n        ...MediaInfo\r\n        averageScore\r\n        popularity\r\n        relations {\r\n          edges {\r\n            relationType\r\n          }\r\n          nodes {\r\n            ...MediaInfo\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    fragment MediaInfo on Media {\r\n      id\r\n      title {\r\n        english\r\n        romaji\r\n      }\r\n      coverImage {\r\n        extraLarge\r\n        large\r\n      }\r\n      type\r\n      description\r\n      startDate {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      endDate {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      episodes\r\n      chapters\r\n      duration\r\n      genres\r\n      tags {\r\n        name\r\n      }\r\n    }`;\r\n    getShowInfo(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        query: query\r\n      })\r\n    });\r\n  }, [params]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <div className=\"lds-facebook\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"all-show-info\">\r\n            <UserFacts\r\n              showPic={showInfo.coverImage}\r\n              title={showInfo.title}\r\n              id={showInfo.id}\r\n              num={Math.max(showInfo.episodes, showInfo.chapters)}\r\n            />\r\n            <div className=\"main-details\">\r\n              <ShowDetails show={showInfo} />\r\n              <RelatedMedia related={showInfo.relations} />\r\n            </div>\r\n          </div>\r\n          <Reviews\r\n            reviews={showInfo.reviews?.edges?.map((review) => review.node)}\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Detail;\r\n","const Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Profile</h1>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import \"./SignUpForm.css\";\nimport { useRef, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { login } from \"../../app/authSlice\";\nimport { supabase } from \"../../app/supabaseClient\";\n\nconst SignUpForm = (props) => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [emailValid, setEmailValid] = useState(true);\n  const [passwordValid, setPasswordValid] = useState(true);\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  const loginHandler = (e) => {\n    e.preventDefault();\n\n    //validate on client side email and pw\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const emailValid = email.length > 0;\n    const pwValid = password.length > 0;\n    if (!emailValid) {\n      setEmailValid(false);\n    } else {\n      setEmailValid(true);\n    }\n    if (!pwValid) {\n      setPasswordValid(false);\n    } else {\n      setPasswordValid(true);\n    }\n\n    //complete validation\n    if (emailValid && pwValid) {\n      //create user\n      async function signUp() {\n        const { user, session, error } = await supabase.auth.signUp({\n          email: email,\n          password: password\n        });\n        if (!error) {\n          //login successful, store user data in store\n          dispatch(\n            login({\n              user_id: user.user_id,\n              access_token: session.access_token,\n              email: user.email\n            })\n          );\n          //navigate back to dashboard\n          navigate(\"/dashboard\", { replace: true });\n        } else {\n          console.log(error);\n        }\n      }\n      signUp();\n    }\n  };\n\n  return (\n    <form onSubmit={loginHandler} className=\"signup-form\">\n      <h1>Sign Up</h1>\n      <div className={emailValid ? \"form-control\" : \"form-control invalid\"}>\n        <label htmlFor=\"email\">Email</label>\n        <input ref={emailRef} type=\"email\" id=\"email\" name=\"email\" />\n      </div>\n      <div className={passwordValid ? \"form-control\" : \"form-control invalid\"}>\n        <label htmlFor=\"password\">Password</label>\n        <input\n          ref={passwordRef}\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n        />\n      </div>\n      <div className=\"signup-links\">\n        <Link to=\"/login\">Login</Link>\n        <Link to=\"#\">Forgot Password</Link>\n      </div>\n      <button type=\"submit\" className=\"signup-submit\">\n        Sign Up\n      </button>\n    </form>\n  );\n};\nexport default SignUpForm;\n","import SignUpForm from \"../components/signup/SignUpForm\";\nimport \"./Pages.css\";\nconst SignUp = (props) => {\n  return (\n    <div className=\"login-page\">\n      <SignUpForm />\n    </div>\n  );\n};\nexport default SignUp;\n","import \"./NavToggle.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHome,\r\n  faSearch,\r\n  faChartArea,\r\n  faUser\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavToggle = (props) => {\r\n  const closeNavbar = () => {\r\n    props.setClosed();\r\n  };\r\n\r\n  return (\r\n    <div className=\"nav-toggle\">\r\n      <ul>\r\n        <li>\r\n          <NavLink\r\n            to=\"/dashboard\"\r\n            className={({ isActive }) => (isActive ? \"activelink\" : undefined)}\r\n            onClick={closeNavbar}\r\n          >\r\n            {\" \"}\r\n            <FontAwesomeIcon icon={faHome} size=\"xl\" className=\"list-icon\" />\r\n            Dashboard\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to=\"/search\"\r\n            className={({ isActive }) => (isActive ? \"activelink\" : undefined)}\r\n            onClick={closeNavbar}\r\n          >\r\n            <FontAwesomeIcon icon={faSearch} size=\"xl\" className=\"list-icon\" />\r\n            Find A Show\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to=\"/\"\r\n            className={({ isActive }) => (isActive ? \"activelink\" : undefined)}\r\n            onClick={closeNavbar}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faChartArea}\r\n              size=\"xl\"\r\n              className=\"list-icon\"\r\n            />\r\n            My Stats\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            to=\"/profile\"\r\n            className={({ isActive }) => (isActive ? \"activelink\" : undefined)}\r\n            onClick={closeNavbar}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} size=\"xl\" className=\"list-icon\" />\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default NavToggle;\r\n","import \"./Navbar.css\";\r\nimport { Fragment, useState } from \"react\";\r\nimport \"./NavToggle\";\r\nimport NavToggle from \"./NavToggle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../app/authSlice\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { showMessage, hideMessage } from \"../../app/messageSlice\";\r\n\r\nexport default function Navbar() {\r\n  const [active, setActive] = useState(false);\r\n  const isLoggedIn = useSelector((state) => state.auth.access_token);\r\n  const email = useSelector((state) => state.auth.email);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const toggleNav = () => {\r\n    setActive((old) => !old);\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setActive(false);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    dispatch(\r\n      showMessage({\r\n        message: `Successfully logged out of ${email} account`,\r\n        status: \"success\"\r\n      })\r\n    );\r\n    setTimeout(() => {\r\n      dispatch(hideMessage());\r\n    }, 3000);\r\n    navigate(\"/login\", { replace: true });\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      {!isLoggedIn ? (\r\n        <Link to=\"/search\">\r\n          <FontAwesomeIcon icon={faSearch} size=\"2x\" className=\"list-icon\" />\r\n        </Link>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {active ? <NavToggle setClosed={closeHandler} /> : \"\"}\r\n      {isLoggedIn ? (\r\n        <button\r\n          onClick={toggleNav}\r\n          className={\r\n            active\r\n              ? \"hamburger hamburger--squeeze is-active\"\r\n              : \"hamburger hamburger--squeeze\"\r\n          }\r\n          type=\"button\"\r\n        >\r\n          <span className=\"hamburger-box\">\r\n            <span className=\"hamburger-inner\"></span>\r\n          </span>\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <a href=\"#\" className=\"nav-brand\"></a>\r\n      {isLoggedIn ? (\r\n        <button className=\"button nav-mobile\" onClick={logoutHandler}>\r\n          Logout\r\n        </button>\r\n      ) : (\r\n        <div className=\"nav-buttons\">\r\n          <Link\r\n            to=\"/login\"\r\n            className=\"button nav-mobile\"\r\n            style={{ \"--local\": \"var(--primary-100)\" }}\r\n          >\r\n            Login\r\n          </Link>\r\n          <Link\r\n            to=\"/sign-up\"\r\n            className=\"button nav-mobile show-mobile\"\r\n            style={{ \"--local\": \"var(--danger-100)\" }}\r\n          >\r\n            Sign Up\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import \"./Message.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch } from \"react-redux\";\nimport { showMessage, hideMessage } from \"../../app/messageSlice\";\nimport { Link } from \"react-router-dom\";\n\nconst Message = (props) => {\n  const dispatch = useDispatch();\n  const status = props.status;\n\n  const closeMessage = () => {\n    dispatch(hideMessage());\n  };\n\n  return (\n    <div className={`message ${status}`}>\n      <p>{props.message}</p>\n      <FontAwesomeIcon\n        icon={faXmark}\n        size=\"xl\"\n        className=\"list-icon\"\n        onClick={closeMessage}\n      />\n      {props.link ? <Link to={props.link}></Link> : \"\"}\n    </div>\n  );\n};\nexport default Message;\n","import { Fragment } from \"react\";\nimport { Routes, Route } from \"react-router\";\nimport \"./styles.css\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Search from \"./pages/Search\";\nimport Detail from \"./pages/Detail\";\nimport Profile from \"./pages/Profile\";\nimport SignUp from \"./pages/SignUp\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Message from \"./components/ui/Message\";\nimport { useSelector } from \"react-redux\";\nexport default function App() {\n  const showmsg = useSelector((state) => state.message.message);\n  const status = useSelector((state) => state.message.status);\n  const link = useSelector((state) => state.message.link);\n\n  return (\n    <Fragment>\n      <Navbar />\n      <div className=\"content\">\n        {showmsg ? (\n          <Message message={showmsg} status={status} link={link} />\n        ) : (\n          \"\"\n        )}\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/search\" element={<Search />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"/detail/:mediaId\" element={<Detail />} />\n          <Route path=\"/sign-up\" element={<SignUp />} />\n        </Routes>\n      </div>\n    </Fragment>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n);\n"],"sourceRoot":""}